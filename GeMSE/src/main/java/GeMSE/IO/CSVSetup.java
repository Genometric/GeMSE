/** GenoMetric Space Explorer (GeMSE) Copyright (C) 2017 Vahid Jalili
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 3 of the License, or
 *  (at your option) any later version.
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software Foundation,
 *  Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
 */
package GeMSE.IO;

import GeMSE.GeMSE;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vahid Jalili
 */
public final class CSVSetup extends javax.swing.JDialog
{

    /**
     * Creates new form GTDSetup
     *
     * @param parent
     * @param modal
     * @param source
     */
    public CSVSetup(java.awt.Frame parent, boolean modal, File source)
    {
        super(parent, modal);
        initComponents();
        Load(source);
    }

    private int _displayingGenericColumnIndex;
    private CSVOptions _GTDOptions;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        HeaderCountTB = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        HeaderL = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        PreviousB = new javax.swing.JButton();
        NextB = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ColumnIndexLabel = new javax.swing.JLabel();
        ReadTheColumn = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        ColumnLabelTB = new javax.swing.JTextField();
        OutOfL = new javax.swing.JLabel();
        ColumnsL = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        HelpDoc = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        HelpVideo = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DataSampleDG = new javax.swing.JTable();
        OKB = new javax.swing.JButton();
        CancelB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("The file has");

        HeaderCountTB.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        HeaderCountTB.setText("0");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("header lines");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("to be skipped");

        HeaderL.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        HeaderL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HeaderL.setText("Header ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HeaderL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(HeaderCountTB)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HeaderL)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(HeaderCountTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        PreviousB.setText("Previous Column");
        PreviousB.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                PreviousBMouseClicked(evt);
            }
        });

        NextB.setText("Next Column");
        NextB.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                NextBMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Column");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        ColumnIndexLabel.setFont(new java.awt.Font("Tahoma", 1, 26)); // NOI18N
        ColumnIndexLabel.setForeground(new java.awt.Color(102, 102, 102));
        ColumnIndexLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ColumnIndexLabel.setText("4");
        ColumnIndexLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        ReadTheColumn.setSelected(true);
        ReadTheColumn.setText("Value is numeric, and read the column");
        ReadTheColumn.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                ReadTheColumnStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Label");

        ColumnLabelTB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        OutOfL.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        OutOfL.setForeground(new java.awt.Color(153, 153, 153));
        OutOfL.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        OutOfL.setText("of 12");
        OutOfL.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        ColumnsL.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        ColumnsL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ColumnsL.setText("Columns");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ColumnsL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ColumnLabelTB))
                            .addComponent(ReadTheColumn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ColumnIndexLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OutOfL, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(PreviousB, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NextB, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ColumnsL)
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReadTheColumn, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ColumnIndexLabel)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ColumnLabelTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OutOfL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PreviousB)
                    .addComponent(NextB))
                .addGap(10, 10, 10))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        HelpDoc.setLabel("Help Doc");
        HelpDoc.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                HelpDocActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Courier New", 1, 48)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 204, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("?");

        HelpVideo.setLabel("Video Tutorial");
        HelpVideo.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                HelpVideoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HelpVideo, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(HelpDoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(HelpDoc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HelpVideo))
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        DataSampleDG.setBackground(java.awt.SystemColor.control);
        DataSampleDG.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        DataSampleDG.setFocusable(false);
        DataSampleDG.setOpaque(false);
        jScrollPane1.setViewportView(DataSampleDG);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                .addContainerGap())
        );

        OKB.setText("OK");
        OKB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                OKBActionPerformed(evt);
            }
        });

        CancelB.setText("Cancel");
        CancelB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                CancelBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(OKB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CancelB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancelB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OKB))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CancelBActionPerformed
    {//GEN-HEADEREND:event_CancelBActionPerformed
        _GTDOptions = null;
        dispose();
    }//GEN-LAST:event_CancelBActionPerformed

    private void ReadTheColumnStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_ReadTheColumnStateChanged
    {//GEN-HEADEREND:event_ReadTheColumnStateChanged
        if (ReadTheColumn.isSelected())
            ColumnLabelTB.setEnabled(true);
        else
            ColumnLabelTB.setEnabled(false);
    }//GEN-LAST:event_ReadTheColumnStateChanged

    private void PreviousBMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PreviousBMouseClicked
    {//GEN-HEADEREND:event_PreviousBMouseClicked
        if (!PreviousB.isEnabled()) return;

        SetColumnInfo();
        if (--_displayingGenericColumnIndex == 0)
            PreviousB.setEnabled(false);
        NextB.setEnabled(true);
        GetColumnInfo();
    }//GEN-LAST:event_PreviousBMouseClicked

    private void NextBMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_NextBMouseClicked
    {//GEN-HEADEREND:event_NextBMouseClicked
        if (!NextB.isEnabled()) return;

        SetColumnInfo();
        if (++_displayingGenericColumnIndex == _GTDOptions.columns.length - 1)
            NextB.setEnabled(false);
        PreviousB.setEnabled(true);
        GetColumnInfo();
    }//GEN-LAST:event_NextBMouseClicked

    private void OKBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_OKBActionPerformed
    {//GEN-HEADEREND:event_OKBActionPerformed
        SetColumnInfo();
        dispose();
    }//GEN-LAST:event_OKBActionPerformed

    private void HelpDocActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_HelpDocActionPerformed
    {//GEN-HEADEREND:event_HelpDocActionPerformed
        try
        {
            OpenWebpage.open(new URI("https://github.com/Genometric/GeMSE/wiki/Load-Data"));
        }
        catch (URISyntaxException ex)
        {
            Logger.getLogger(GeMSE.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_HelpDocActionPerformed

    private void HelpVideoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_HelpVideoActionPerformed
    {//GEN-HEADEREND:event_HelpVideoActionPerformed
        try
        {
            OpenWebpage.open(new URI("https://youtu.be/h9FbXNukdQY?list=PLfWxoOMC6swJBgu4nIDgsoXO_sLuGnIqF"));
        }
        catch (URISyntaxException ex)
        {
            Logger.getLogger(GeMSE.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_HelpVideoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(CSVSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(CSVSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(CSVSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(CSVSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                CSVSetup dialog = new CSVSetup(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e)
                    {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelB;
    private javax.swing.JLabel ColumnIndexLabel;
    private javax.swing.JTextField ColumnLabelTB;
    private javax.swing.JLabel ColumnsL;
    private javax.swing.JTable DataSampleDG;
    private javax.swing.JTextField HeaderCountTB;
    private javax.swing.JLabel HeaderL;
    private javax.swing.JButton HelpDoc;
    private javax.swing.JButton HelpVideo;
    private javax.swing.JButton NextB;
    private javax.swing.JButton OKB;
    private javax.swing.JLabel OutOfL;
    private javax.swing.JButton PreviousB;
    private javax.swing.JCheckBox ReadTheColumn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public CSVOptions ShowDialog()
    {
        setVisible(true);
        _GTDOptions.headerCounter = Integer.valueOf(HeaderCountTB.getText());
        return _GTDOptions;
    }

    private void Load(File source)
    {
        String line;
        int readLines = 0;
        int maxColumnCount = 0;
        BufferedReader fileReader;
        ArrayList<String[]> sampleData = new ArrayList();
        try
        {
            fileReader = new BufferedReader(new FileReader(source));
            while ((line = fileReader.readLine()) != null && readLines++ < 15)
            {
                sampleData.add(line.split("\\s*\t\\s*"));
                maxColumnCount = Math.max(maxColumnCount, sampleData.get(sampleData.size() - 1).length);
            }
        }
        catch (IOException ex)
        {
            Logger.getLogger(GTFParser.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (maxColumnCount < 4) dispose();

        OutOfL.setText("of " + String.valueOf(maxColumnCount));
        _GTDOptions = new CSVOptions();
        _GTDOptions.columns = new GTDColumns[maxColumnCount - 3];
        for (int i = 0 ; i < maxColumnCount - 3 ; i++)
            _GTDOptions.columns[i] = new GTDColumns(false, i + 3, "Column " + String.valueOf(i + 4));
        _GTDOptions.columns[0].SetEnabled(true);
        PreviousB.setEnabled(false);
        _displayingGenericColumnIndex = 0;
        GetColumnInfo();

        DefaultTableModel sampleTabModel = new DefaultTableModel()
        {
            @Override
            public boolean isCellEditable(int row, int column)
            {
                return false;
            }
        };

        String[] columnTitle = new String[maxColumnCount];
        columnTitle[0] = "chr";
        columnTitle[1] = "start";
        columnTitle[2] = "stop";
        for (int i = 3 ; i < maxColumnCount ; i++)
            columnTitle[i] = "Column " + String.valueOf(i + 1);
        sampleTabModel.setColumnIdentifiers(columnTitle);
        for (String[] l : sampleData)
            sampleTabModel.addRow(l);
        DataSampleDG.setModel(sampleTabModel);
    }

    private void GetColumnInfo()
    {
        ColumnIndexLabel.setText(String.valueOf(_displayingGenericColumnIndex + 4));
        ReadTheColumn.setSelected(_GTDOptions.columns[_displayingGenericColumnIndex].GetRead());
        ColumnLabelTB.setText(_GTDOptions.columns[_displayingGenericColumnIndex].GetColumnLabel());
    }
    private void SetColumnInfo()
    {
        _GTDOptions.columns[_displayingGenericColumnIndex].SetEnabled(ReadTheColumn.isSelected());
        _GTDOptions.columns[_displayingGenericColumnIndex].SetColumnLabel(ColumnLabelTB.getText());
    }
}
