/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GeMSE.Popups;

import GeMSE.GlobalVariables;
import GeMSE.GS.SampleData;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/**
 *
 * @author vahid
 */
public class ColumnsAndRowsLabelsOptions extends javax.swing.JFrame
{

    /**
     * Creates new form ColumnsAndRowsLabelsOptions
     */
    public ColumnsAndRowsLabelsOptions()
    {
        initComponents();

        ButtonGroup group = new ButtonGroup();
        group.add(UseRowID_RB);
        group.add(UseSampleRegionTXTAttributes_RB);
        group.add(UseReferenceAnnotation_RB);

        InitializeLabelOptions();

        HeatmapTitle_TB.setText(GlobalVariables.HeatmapOptions.heatmapTitle);
        HorizontalAxisTitle_TB.setText(GlobalVariables.HeatmapOptions.horizontalAxisTitle);
        VerticalAxisTitle_TB.setText(GlobalVariables.HeatmapOptions.verticalAxisTitle);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel3 = new javax.swing.JPanel();
        Columns_L = new javax.swing.JLabel();
        Columns_CB = new javax.swing.JComboBox();
        Rows_L = new javax.swing.JLabel();
        ReferenceSampleAttributes_CB = new javax.swing.JComboBox();
        UseRowID_RB = new javax.swing.JRadioButton();
        UseSampleRegionTXTAttributes_RB = new javax.swing.JRadioButton();
        ChooseSampleForTXTAttributes_CB = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        SampleAttribute_CB = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        UseReferenceAnnotation_RB = new javax.swing.JRadioButton();
        OK_BT10 = new javax.swing.JButton();
        Cancel_BT10 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        Titles_L1 = new javax.swing.JLabel();
        HeatmapTitle_L = new javax.swing.JLabel();
        HorizontalAxisTitle_L = new javax.swing.JLabel();
        VerticalAxisTitle_L = new javax.swing.JLabel();
        HeatmapTitle_TB = new javax.swing.JTextField();
        HorizontalAxisTitle_TB = new javax.swing.JTextField();
        VerticalAxisTitle_TB = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Columns_L.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Columns_L.setText("Columns (Samples) Labels ");
        Columns_L.setMaximumSize(new java.awt.Dimension(140, 14));
        Columns_L.setMinimumSize(new java.awt.Dimension(140, 14));
        Columns_L.setPreferredSize(new java.awt.Dimension(140, 14));

        Rows_L.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Rows_L.setText("Rows (Regions) Labels");
        Rows_L.setMaximumSize(new java.awt.Dimension(140, 14));
        Rows_L.setMinimumSize(new java.awt.Dimension(140, 14));
        Rows_L.setPreferredSize(new java.awt.Dimension(140, 14));

        UseRowID_RB.setText("Use ID (chr - start - stop)");
        UseRowID_RB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                UseRowID_RBActionPerformed(evt);
            }
        });

        UseSampleRegionTXTAttributes_RB.setText("Use textual attributes of regions");
        UseSampleRegionTXTAttributes_RB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                UseSampleRegionTXTAttributes_RBActionPerformed(evt);
            }
        });

        ChooseSampleForTXTAttributes_CB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ChooseSampleForTXTAttributes_CBActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Sample");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Attribute");

        UseReferenceAnnotation_RB.setText("Use reference sample");
        UseReferenceAnnotation_RB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                UseReferenceAnnotation_RBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Columns_L, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                    .addComponent(Rows_L, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Columns_CB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UseSampleRegionTXTAttributes_RB)
                            .addComponent(UseRowID_RB))
                        .addGap(0, 193, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(UseReferenceAnnotation_RB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ChooseSampleForTXTAttributes_CB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ReferenceSampleAttributes_CB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SampleAttribute_CB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Columns_L, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Columns_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rows_L, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UseRowID_RB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UseSampleRegionTXTAttributes_RB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChooseSampleForTXTAttributes_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(SampleAttribute_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UseReferenceAnnotation_RB)
                    .addComponent(ReferenceSampleAttributes_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        OK_BT10.setText("OK");
        OK_BT10.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                OK_BT10ActionPerformed(evt);
            }
        });

        Cancel_BT10.setText("Cancel");
        Cancel_BT10.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Cancel_BT10ActionPerformed(evt);
            }
        });

        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Titles_L1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Titles_L1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Titles_L1.setText("Titles");

        HeatmapTitle_L.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        HeatmapTitle_L.setText("Heatmap Title");

        HorizontalAxisTitle_L.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        HorizontalAxisTitle_L.setText("Horizontal Axis Title");

        VerticalAxisTitle_L.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        VerticalAxisTitle_L.setText("Vertical Axis Title");

        HeatmapTitle_TB.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        HorizontalAxisTitle_TB.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        VerticalAxisTitle_TB.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Titles_L1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(VerticalAxisTitle_L, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(HorizontalAxisTitle_L, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(HeatmapTitle_L, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(VerticalAxisTitle_TB)
                    .addComponent(HorizontalAxisTitle_TB, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(HeatmapTitle_TB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE))
                .addGap(13, 13, 13))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(Titles_L1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(HeatmapTitle_L)
                            .addComponent(HeatmapTitle_TB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(HorizontalAxisTitle_L)
                            .addComponent(HorizontalAxisTitle_TB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(VerticalAxisTitle_L)
                            .addComponent(VerticalAxisTitle_TB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(OK_BT10, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Cancel_BT10, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cancel_BT10)
                    .addComponent(OK_BT10))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UseRowID_RBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_UseRowID_RBActionPerformed
    {//GEN-HEADEREND:event_UseRowID_RBActionPerformed
        if (UseRowID_RB.isSelected())
        {
            ChooseSampleForTXTAttributes_CB.setEnabled(false);
            SampleAttribute_CB.setEnabled(false);
            ReferenceSampleAttributes_CB.setEnabled(false);
        }
    }//GEN-LAST:event_UseRowID_RBActionPerformed

    private void UseSampleRegionTXTAttributes_RBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_UseSampleRegionTXTAttributes_RBActionPerformed
    {//GEN-HEADEREND:event_UseSampleRegionTXTAttributes_RBActionPerformed
        if (UseSampleRegionTXTAttributes_RB.isSelected())
        {
            ChooseSampleForTXTAttributes_CB.removeAllItems();
            for (SampleData sample : GlobalVariables.samples)
                if (!sample.GetTXTAttributesArray().isEmpty())
                    ChooseSampleForTXTAttributes_CB.addItem(sample.fileName);

            if (ChooseSampleForTXTAttributes_CB.getItemCount() == 0)
            {
                ChooseSampleForTXTAttributes_CB.setEnabled(false);
                SampleAttribute_CB.setEnabled(false);
                JOptionPane.showMessageDialog(
                        null,
                        "None of the imported samples has a textual attribute-value pair to be used for the rows labeling.",
                        "No textual attribute-value pair", 2);
                UseRowID_RB.setSelected(true);
            }
            else
            {
                ChooseSampleForTXTAttributes_CB.setEnabled(true);
                SampleAttribute_CB.setEnabled(true);
            }

            ReferenceSampleAttributes_CB.setEnabled(false);
        }
    }//GEN-LAST:event_UseSampleRegionTXTAttributes_RBActionPerformed

    private void ChooseSampleForTXTAttributes_CBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ChooseSampleForTXTAttributes_CBActionPerformed
    {//GEN-HEADEREND:event_ChooseSampleForTXTAttributes_CBActionPerformed
        for (SampleData sample : GlobalVariables.samples)
            if (sample.fileName.equals(ChooseSampleForTXTAttributes_CB.getSelectedItem().toString()))
            {
                ArrayList<String> attributes = sample.GetTXTAttributesArray();
                for (String attribute : sample.GetTXTAttributesArray())
                    SampleAttribute_CB.addItem(attribute);
            }
    }//GEN-LAST:event_ChooseSampleForTXTAttributes_CBActionPerformed

    private void UseReferenceAnnotation_RBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_UseReferenceAnnotation_RBActionPerformed
    {//GEN-HEADEREND:event_UseReferenceAnnotation_RBActionPerformed
        if (UseReferenceAnnotation_RB.isSelected())
        {
            ChooseSampleForTXTAttributes_CB.setEnabled(false);
            SampleAttribute_CB.setEnabled(false);
            ReferenceSampleAttributes_CB.setEnabled(true);
        }
    }//GEN-LAST:event_UseReferenceAnnotation_RBActionPerformed

    private void Cancel_BT10ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Cancel_BT10ActionPerformed
    {//GEN-HEADEREND:event_Cancel_BT10ActionPerformed
        this.dispose();
    }//GEN-LAST:event_Cancel_BT10ActionPerformed

    private void OK_BT10ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_OK_BT10ActionPerformed
    {//GEN-HEADEREND:event_OK_BT10ActionPerformed
        GlobalVariables.selectedColumnLabelOption = (String) Columns_CB.getSelectedItem();

        if (UseRowID_RB.isSelected() == true)
        {
            GlobalVariables.rowLabelsSource = GlobalVariables.RLS.ID;
            GlobalVariables.rowLabelsSourceSelectedSample = "";
            GlobalVariables.rowLabelsSourceSelectedAttribute = "";
        }
        else if (UseSampleRegionTXTAttributes_RB.isSelected() == true)
        {
            GlobalVariables.rowLabelsSource = GlobalVariables.RLS.SampleAttributes;
            GlobalVariables.rowLabelsSourceSelectedSample = ChooseSampleForTXTAttributes_CB.getSelectedItem().toString();
            GlobalVariables.rowLabelsSourceSelectedAttribute = SampleAttribute_CB.getSelectedItem().toString();
        }
        else if (UseReferenceAnnotation_RB.isSelected() == true)
        {
            GlobalVariables.rowLabelsSource = GlobalVariables.RLS.ReferenceAttributes;
            GlobalVariables.rowLabelsSourceSelectedSample = "";
            GlobalVariables.rowLabelsSourceSelectedAttribute = ReferenceSampleAttributes_CB.getSelectedItem().toString();
        }

        //GlobalVariables.selectedRowLabelOption = (String) ReferenceSampleAttributes_CB.getSelectedItem();

        GlobalVariables.HeatmapOptions.heatmapTitle = HeatmapTitle_TB.getText();
        GlobalVariables.HeatmapOptions.horizontalAxisTitle = HorizontalAxisTitle_TB.getText();
        GlobalVariables.HeatmapOptions.verticalAxisTitle = VerticalAxisTitle_TB.getText();
        GlobalVariables.sessionSerializationRequired = true;

        this.dispose();
    }//GEN-LAST:event_OK_BT10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(ColumnsAndRowsLabelsOptions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(ColumnsAndRowsLabelsOptions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(ColumnsAndRowsLabelsOptions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(ColumnsAndRowsLabelsOptions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new ColumnsAndRowsLabelsOptions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel_BT;
    private javax.swing.JButton Cancel_BT1;
    private javax.swing.JButton Cancel_BT10;
    private javax.swing.JButton Cancel_BT2;
    private javax.swing.JButton Cancel_BT3;
    private javax.swing.JButton Cancel_BT4;
    private javax.swing.JButton Cancel_BT5;
    private javax.swing.JButton Cancel_BT6;
    private javax.swing.JButton Cancel_BT7;
    private javax.swing.JButton Cancel_BT8;
    private javax.swing.JButton Cancel_BT9;
    private javax.swing.JComboBox<String> ChooseSampleForTXTAttributes_CB;
    private javax.swing.JComboBox Columns_CB;
    private javax.swing.JLabel Columns_L;
    private javax.swing.JLabel HeatmapTitle_L;
    private javax.swing.JTextField HeatmapTitle_TB;
    private javax.swing.JLabel HorizontalAxisTitle_L;
    private javax.swing.JTextField HorizontalAxisTitle_TB;
    private javax.swing.JButton OK_BT;
    private javax.swing.JButton OK_BT1;
    private javax.swing.JButton OK_BT10;
    private javax.swing.JButton OK_BT2;
    private javax.swing.JButton OK_BT3;
    private javax.swing.JButton OK_BT4;
    private javax.swing.JButton OK_BT5;
    private javax.swing.JButton OK_BT6;
    private javax.swing.JButton OK_BT7;
    private javax.swing.JButton OK_BT8;
    private javax.swing.JButton OK_BT9;
    private javax.swing.JComboBox ReferenceSampleAttributes_CB;
    private javax.swing.JLabel Rows_L;
    private javax.swing.JComboBox<String> SampleAttribute_CB;
    private javax.swing.JLabel Titles_L1;
    private javax.swing.JRadioButton UseReferenceAnnotation_RB;
    private javax.swing.JRadioButton UseRowID_RB;
    private javax.swing.JRadioButton UseSampleRegionTXTAttributes_RB;
    private javax.swing.JLabel VerticalAxisTitle_L;
    private javax.swing.JTextField VerticalAxisTitle_TB;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    // End of variables declaration//GEN-END:variables


    private void InitializeLabelOptions()
    {
        for (String cL : GlobalVariables.availableColumnLabelOptions)
            Columns_CB.addItem(cL);

        if (null != GlobalVariables.rowLabelsSource)
            switch (GlobalVariables.rowLabelsSource)
            {
                case ID:
                    UseRowID_RB.setSelected(true);
                    ChooseSampleForTXTAttributes_CB.setEnabled(false);
                    SampleAttribute_CB.setEnabled(false);
                    ReferenceSampleAttributes_CB.setEnabled(false);
                    break;
                case SampleAttributes:
                    UseSampleRegionTXTAttributes_RB.setSelected(true);
                    ChooseSampleForTXTAttributes_CB.setEnabled(true);
                    SampleAttribute_CB.setEnabled(true);
                    ReferenceSampleAttributes_CB.setEnabled(false);
                    break;
                case ReferenceAttributes:
                    UseReferenceAnnotation_RB.setSelected(true);
                    ChooseSampleForTXTAttributes_CB.setEnabled(false);
                    SampleAttribute_CB.setEnabled(false);
                    ReferenceSampleAttributes_CB.setEnabled(true);
                    break;
            }

        if (GlobalVariables.annotations == null || GlobalVariables.annotations.features.isEmpty())
            UseReferenceAnnotation_RB.setEnabled(false);
        else
            for (String attribute : GlobalVariables.annotations.GetTXTAttributesArray())
                ReferenceSampleAttributes_CB.addItem(attribute);

        Columns_CB.setSelectedItem(GlobalVariables.selectedColumnLabelOption);
        // ReferenceSampleAttributes_CB.setSelectedItem(GlobalVariables.selectedRowLabelOption);
    }
}
